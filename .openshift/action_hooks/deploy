#!/bin/bash

# fail fast - see http://ss64.com/bash/set.html
set -e

# debug mode on!
#set -x

# Standard OpenShift Environment Variables
# https://docs.openshift.org/origin-m4/oo_user_guide.html#standard-openshift-environment-variables

echo ""
cd $OPENSHIFT_REPO_DIR

export FAN_HOME=$OPENSHIFT_DATA_DIR/.fantom
export PATH=$FAN_HOME/bin:$PATH



# ---- Install Fantom ----

if [ ! -d $FAN_HOME ]; then

	# we need the FAN_VERSION because it's inside the the zip entires! 
	# e.g. /fantom-1.0.67/bin/fan.exe
	FAN_VERSION=1.0.67
	FAN_URL=https://bitbucket.org/fantom/fan-1.0/downloads/fantom-$FAN_VERSION.zip

	echo -n "-----> Downloading $FAN_URL ... "
	curl --silent --location $FAN_URL > fantom-$FAN_VERSION.zip
	echo "done"

	echo -n "-----> Installing Fantom $FAN_VERSION... "

	# Linux has no 'unzip' so we use 'jar' instead
	# http://stackoverflow.com/questions/16599128/how-to-unzip-files-in-a-heroko-buildpack
	jar xf fantom-$FAN_VERSION.zip

	# surprisingly Fantom permissions are not stored in the .zip
	chmod +r+x fantom-$FAN_VERSION/bin/*
	mv fantom-$FAN_VERSION $FAN_HOME

	rm fantom-$FAN_VERSION.zip
	echo "done"

	# print fantom version details to prove it works
	echo ""
	fan -version 2>&1 | sed -u "s/^/       /"
	echo ""
fi



# ---- Run Fantom Build Tasks ----

echo "-----> Calling Build Target: openShiftPreCompile..."
fan .openshift/action_hooks/CallBuildTarget.fan build.fan openShiftPreCompile 2>&1 | sed -u "s/^/       /"
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
	echo " !     Failed to pre-compile app"
	exit 1
fi
echo ""

echo "-----> Calling Build Target: compile..."
fan build.fan compile 2>&1 | sed -u "s/^/       /"
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
	echo " !     Failed to build app"
	exit 1
fi
echo ""

echo "-----> Creating openShiftCmd.txt ..."
fan .openshift/action_hooks/CreateCmdFile.fan build.fan openShiftCmd.txt 2>&1 | sed -u "s/^/       /"
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
	echo " !     Failed to create openShiftCmd.txt"
	exit 1
fi
echo ""
